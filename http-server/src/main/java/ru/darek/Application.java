package ru.darek;

public class Application {
    public static void main(String[] args) {
        int port = Integer.parseInt((String)System.getProperties().getOrDefault("port", "8189"));
        new HttpServer(port).start();
    }
}

/*
Домашнее задание:
- Реализовать реакцию на заголовок Accept (заголовок указывает серверу что клиент ожидает получить в ответе),
если пришел application/json а серверу надо вернуть text/html, то необходимо вернуть ответ со статус кодом 406 Not Acceptable.
Соответственно для всех процессоров необходимо проставить корректный Accept в ответет
- Реализуйте механизм кеширования ответов, это можно сделать на отдельном Processor'е, который возвращает какие-то тестовые данные,
или добавить кеширование к механизму возврата файлов
- Добавьте реакцию на неправильный HTTP метод, если диспетчер обрабатывать только GET запрос по адресу /какой-то_путь,
а кто-то пытается отправить любой другой HTTP метод, то необходимо вернуть ответ со статус кодом 405 Method Not Allowed
- Добавьте механиз сессий. В приходящем запроще в заголовке Cookie пробуйте найти идентификатор SESSIONID,
если его нет, то генерируйте его в виде UUID.RandomUUID() и отдавайте в ответном заголовке Set-Cookie.
В логирование входящих запросов добавьте информацию о сессии
 */

// Cache-Control: max-age=0
// ETag: "beli-berda-12343"

/*
при получении запроса на устаревший ресурс кеш передаёт его дальше с заголовком If-None-Match на случай,
если копия все ещё актуальна. Если это так, сервер возвращает заголовок 304 Not Modified («не изменялось»), а тело ресурса не посылает

Валидация кеша
Валидация кеша запускается при нажатии пользователем кнопки перезагрузки.
Кроме того, она может выполняться в ходе обычного просмотра страниц,
если кешированный ответ включает заголовок "Cache-control: must-revalidate".

Заголовки ETag

Заголовок ответа ETag является непрозрачным для клиентского приложения (агента) значением,
которое можно использовать в качестве сильного валидатора. Суть в том, что клиент, например, браузер, не знает,
что представляет эта строка и не может предсказать, каким будет её значение. Если в ответе присутствует заголовок ETag,
клиент может транслировать его значение через заголовок If-None-Match будущих запросов для валидации кешированного ресурса.

Заголовок ответа Last-Modified можно использовать в качестве слабого валидатора. Слабым он считается из-за того,
что имеет 1-секундное разрешение. Если в ответе присутствует заголовок Last-Modified,
то для валидации кешированного документа клиент может выводить в запросах заголовок If-Modified-Since.

При запросе на валидацию сервер может либо проигнорировать валидацию и послать стандартный ответ 200 OK,
либо вернуть ответ 304 Not Modified (с пустым телом), тем самым указывая браузеру взять копию из кеша.
В последнем случае в ответ могут входить также заголовки для обновления срока действия кешированного ресурса.
 */
